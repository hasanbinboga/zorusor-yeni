/*

insert license info here

*/

using System;
using System.Collections;
using System.Collections.Generic;


namespace BilisselBeceriler.Entities.Windows
{
	/// <summary>
	/// Generated by MyGeneration using the NHibernate Object Mapping 1.3.1 by Grimaldi Giuseppe (giuseppe.grimaldi@infracom.it)
	/// </summary>
	[Serializable]
	public class BelgePlanSoruTur 
	{
		#region Private Members
		
		// Variabili di stato
		private bool _isChanged;
		private bool _isDeleted;

		// Primary Key(s) 
		private long _id; 
		
		// Foreign Keys mappate come Many-To-One 
		private PlanSoruTur _plansoruturref; 
		private Havuz _havuzref; 
		private SoruTurSoruSablon _sorutursorusablonref; 
		private Belge _belgeref; 
		
		// Properties 
		private int _soruadet; 
		
		// One-to-many relations 
		private IList<Soru> _listSoru;		

		#endregion
		
		#region Default ( Empty ) Class Constructor
		
		/// <summary>
		/// default constructor
		/// </summary>
		public BelgePlanSoruTur()
		{
			_id = 0; 
			_plansoruturref = null; 
			_havuzref = null; 
			_sorutursorusablonref = null; 
			_belgeref = null; 
			_soruadet = 0; 
			_listSoru = null; 
		}
		
		#endregion // End of Default ( Empty ) Class Constructor
		
		#region Full Constructor
		
		/// <summary>
		/// full constructor
		/// </summary>
		public BelgePlanSoruTur(long id, PlanSoruTur plansoruturref, Havuz havuzref, SoruTurSoruSablon sorutursorusablonref, Belge belgeref, int soruadet)
		{
			_id = id; 
			_plansoruturref = plansoruturref; 
			_havuzref = havuzref; 
			_sorutursorusablonref = sorutursorusablonref; 
			_belgeref = belgeref; 
			_soruadet = soruadet; 
			_listSoru = null; 
		}
		
		#endregion // End Full Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		} 
	  
		/// <summary>
		/// Planda kullanılacak soru türünün belirlendiği ilgili PlanSoruTür ün Id si
		/// </summary>		
		public virtual PlanSoruTur PlanSoruTurRef
		{
			get { return _plansoruturref; }
			set { _isChanged |= (_plansoruturref != value); _plansoruturref = value; }
		} 
	  
		/// <summary>
		/// Kullanılacak Havuzun Id si
		/// </summary>		
		public virtual Havuz HavuzRef
		{
			get { return _havuzref; }
			set { _isChanged |= (_havuzref != value); _havuzref = value; }
		} 
	  
		/// <summary>
		/// İlgili soru türü için kullanılacak soru Şablonunun Id si
		/// </summary>		
		public virtual SoruTurSoruSablon SoruTurSoruSablonRef
		{
			get { return _sorutursorusablonref; }
			set { _isChanged |= (_sorutursorusablonref != value); _sorutursorusablonref = value; }
		} 
	  
		/// <summary>
		/// İlgili Belgenin Id si
		/// </summary>		
		public virtual Belge BelgeRef
		{
			get { return _belgeref; }
			set { _isChanged |= (_belgeref != value); _belgeref = value; }
		} 
	  
		/// <summary>
		/// İlgili planda belirtilen soru  türü ve zorluk ayarları ile bu tabloda belirtilen havuz ve soru şablonu kullanılarak kaç adet soru hazırlanacağın kaydedildiği yerdir. Burada Sayfa Adedi belirtilememesinin nedeni bir sorunun birden fazla sayfadan oluşabilme ihtimalindendir. Uygulama, belirtilen soru türü, şablonları ve adetlerine göre kaç sayfa oluşturulduğunu hesaplayabilir.
		/// </summary>		
		public virtual int SoruAdet
		{
			get { return _soruadet; }
			set { _isChanged |= (_soruadet != value); _soruadet = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual IList<Soru> ListSoru
		{
			get { return _listSoru; }
			set { _isChanged |= (_listSoru != value); _listSoru = value; }
		} 
	  
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		#region Public Functions

		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		#region Equals And HashCode Overrides
		
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			BelgePlanSoruTur castObj = (BelgePlanSoruTur)obj; 
			return ( castObj != null ) &&
				( this._id == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{ 
			int hash = 57; 
			hash = 27 * hash * this._id.GetHashCode();
					
			return hash;		
			
		}
		
		#endregion
		
	}
}