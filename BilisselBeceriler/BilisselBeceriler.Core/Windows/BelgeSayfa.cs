/*

insert license info here

*/

using System;
using System.Collections;
using System.Collections.Generic;


namespace BilisselBeceriler.Entities.Windows
{
	/// <summary>
	/// Generated by MyGeneration using the NHibernate Object Mapping 1.3.1 by Grimaldi Giuseppe (giuseppe.grimaldi@infracom.it)
	/// </summary>
	[Serializable]
	public class BelgeSayfa 
	{
		#region Private Members
		
		// Variabili di stato
		private bool _isChanged;
		private bool _isDeleted;

		// Primary Key(s) 
		private long _id; 
		
		// Foreign Keys mappate come Many-To-One 
		private Sayfa _sayfaref; 
		private Belge _belgeref; 
		
		// Properties 
		private bool _sayfanovarmi; 
		private int _sayfano; 
		private int _indeks; 
		private bool _dikeymi; 
		private string _baslik; 
		
		// One-to-many relations 
		private IList<Soru> _listSoru;		

		#endregion
		
		#region Default ( Empty ) Class Constructor
		
		/// <summary>
		/// default constructor
		/// </summary>
		public BelgeSayfa()
		{
			_id = 0; 
			_sayfaref = null; 
			_belgeref = null; 
			_sayfanovarmi = false; 
			_sayfano = 0; 
			_indeks = 0; 
			_dikeymi = false; 
			_baslik = null; 
			_listSoru = null; 
		}
		
		#endregion // End of Default ( Empty ) Class Constructor
		
		#region Full Constructor
		
		/// <summary>
		/// full constructor
		/// </summary>
		public BelgeSayfa(long id, Sayfa sayfaref, Belge belgeref, bool sayfanovarmi, int sayfano, int indeks, bool dikeymi, string baslik)
		{
			_id = id; 
			_sayfaref = sayfaref; 
			_belgeref = belgeref; 
			_sayfanovarmi = sayfanovarmi; 
			_sayfano = sayfano; 
			_indeks = indeks; 
			_dikeymi = dikeymi; 
			_baslik = baslik; 
			_listSoru = null; 
		}
		
		#endregion // End Full Constructor
		
		#region Required Fields Only Constructor
		
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public BelgeSayfa(long id, Sayfa sayfaref, Belge belgeref, bool sayfanovarmi, int indeks, bool dikeymi)
		{
			_id = id; 
			_sayfaref = sayfaref; 
			_belgeref = belgeref; 
			_sayfanovarmi = sayfanovarmi; 
			_sayfano = 0; 
			_indeks = indeks; 
			_dikeymi = dikeymi; 
			_baslik = null; 
			_listSoru = null; 
		}
		
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		} 
	  
		/// <summary>
		/// İlgili Sayfanın Id si
		/// </summary>		
		public virtual Sayfa SayfaRef
		{
			get { return _sayfaref; }
			set { _isChanged |= (_sayfaref != value); _sayfaref = value; }
		} 
	  
		/// <summary>
		/// İlgili Belgenin Id si
		/// </summary>		
		public virtual Belge BelgeRef
		{
			get { return _belgeref; }
			set { _isChanged |= (_belgeref != value); _belgeref = value; }
		} 
	  
		/// <summary>
		/// İlgili sayfaya sayfa numarası verilip verilmeyeceğini belirler.
		/// </summary>		
		public virtual bool SayfaNoVarMi
		{
			get { return _sayfanovarmi; }
			set { _isChanged |= (_sayfanovarmi != value); _sayfanovarmi = value; }
		} 
	  
		/// <summary>
		/// Sayfanın görünen numarası
		/// </summary>		
		public virtual int SayfaNo
		{
			get { return _sayfano; }
			set { _isChanged |= (_sayfano != value); _sayfano = value; }
		} 
	  
		/// <summary>
		/// Sayfanın belge içerisindeki yeri. Bir sayfanı sayfa nosu olmayabilir. (Ön kapak arka pkapak gibi). Ancak belgede hangi pozisyonda olduğu bu alanla belirlenir.
		/// </summary>		
		public virtual int Indeks
		{
			get { return _indeks; }
			set { _isChanged |= (_indeks != value); _indeks = value; }
		} 
	  
		/// <summary>
		/// Sayfanın dikey mi yataymı olduğu bilgisini tutan alandır. 
		/// </summary>		
		public virtual bool DikeyMi
		{
			get { return _dikeymi; }
			set { _isChanged |= (_dikeymi != value); _dikeymi = value; }
		} 
	  
		/// <summary>
		/// Sayfanın antet kısmında yer alan başlık metnidir.
		/// </summary>		
		public virtual string Baslik
		{
			get { return _baslik; }
			set	
			{
				if ( value != null )
					if( value.Length > 100)
						throw new ArgumentOutOfRangeException("Invalid value for Baslik", value, value.ToString());
				
				_isChanged |= (_baslik != value); _baslik = value;
			}
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual IList<Soru> ListSoru
		{
			get { return _listSoru; }
			set { _isChanged |= (_listSoru != value); _listSoru = value; }
		} 
	  
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		#region Public Functions

		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		#region Equals And HashCode Overrides
		
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			BelgeSayfa castObj = (BelgeSayfa)obj; 
			return ( castObj != null ) &&
				( this._id == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{ 
			int hash = 57; 
			hash = 27 * hash * this._id.GetHashCode();
					
			return hash;		
			
		}
		
		#endregion
		
	}
}