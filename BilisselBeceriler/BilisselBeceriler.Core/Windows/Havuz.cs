/*

insert license info here

*/

using System;
using System.Collections;
using System.Collections.Generic;


namespace BilisselBeceriler.Entities.Windows
{
	/// <summary>
	/// Generated by MyGeneration using the NHibernate Object Mapping 1.3.1 by Grimaldi Giuseppe (giuseppe.grimaldi@infracom.it)
	/// </summary>
	[Serializable]
	public class Havuz 
	{
		#region Private Members
		
		// Variabili di stato
		private bool _isChanged;
		private bool _isDeleted;

		// Primary Key(s) 
		private long _id; 
		
		// Properties 
		private string _ad; 
		private long _yasgrupref; 
		private string _aciklama; 
		
		// One-to-many relations 
		private IList<BelgePlanSoruTur> _listBelgePlanSoruTur;
		private IList<Parca> _listParca;
		private IList<SoruTurHavuz> _listSoruTurHavuz;		

		#endregion
		
		#region Default ( Empty ) Class Constructor
		
		/// <summary>
		/// default constructor
		/// </summary>
		public Havuz()
		{
			_id = 0; 
			_ad = null; 
			_yasgrupref = 0; 
			_aciklama = null; 
			_listBelgePlanSoruTur = null; 
			_listParca = null; 
			_listSoruTurHavuz = null; 
		}
		
		#endregion // End of Default ( Empty ) Class Constructor
		
		#region Full Constructor
		
		/// <summary>
		/// full constructor
		/// </summary>
		public Havuz(long id, string ad, long yasgrupref, string aciklama)
		{
			_id = id; 
			_ad = ad; 
			_yasgrupref = yasgrupref; 
			_aciklama = aciklama; 
			_listBelgePlanSoruTur = null; 
			_listParca = null; 
			_listSoruTurHavuz = null; 
		}
		
		#endregion // End Full Constructor
		
		#region Required Fields Only Constructor
		
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public Havuz(long id, string ad, long yasgrupref)
		{
			_id = id; 
			_ad = ad; 
			_yasgrupref = yasgrupref; 
			_aciklama = null; 
			_listBelgePlanSoruTur = null; 
			_listParca = null; 
			_listSoruTurHavuz = null; 
		}
		
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		} 
	  
		/// <summary>
		/// Havuzun Adı
		/// </summary>		
		public virtual string Ad
		{
			get { return _ad; }
			set	
			{
				if ( value != null )
					if( value.Length > 80)
						throw new ArgumentOutOfRangeException("Invalid value for Ad", value, value.ToString());
				
				_isChanged |= (_ad != value); _ad = value;
			}
		} 
	  
		/// <summary>
		/// Her havuz farklı yaş grupları için hazırlanabilir.  Ancak Tüm yaşlarda kullanılabilen havuzlar da mevcuttur. Mesela Balon havuzu genel havuz olup, tüm yaş gruplarında kullanılabilir. Bunun yanı sıra yuvarlak havuzlar her yaş grubu için ayrı ayrı tasarlanmıştır.
		/// </summary>		
		public virtual long YasGrupRef
		{
			get { return _yasgrupref; }
			set { _isChanged |= (_yasgrupref != value); _yasgrupref = value; }
		} 
	  
		/// <summary>
		/// Havuz ile ilgili muhtemel açıklamalar
		/// </summary>		
		public virtual string Aciklama
		{
			get { return _aciklama; }
			set	
			{
				if ( value != null )
					if( value.Length > 250)
						throw new ArgumentOutOfRangeException("Invalid value for Aciklama", value, value.ToString());
				
				_isChanged |= (_aciklama != value); _aciklama = value;
			}
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual IList<BelgePlanSoruTur> ListBelgePlanSoruTur
		{
			get { return _listBelgePlanSoruTur; }
			set { _isChanged |= (_listBelgePlanSoruTur != value); _listBelgePlanSoruTur = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual IList<Parca> ListParca
		{
			get { return _listParca; }
			set { _isChanged |= (_listParca != value); _listParca = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual IList<SoruTurHavuz> ListSoruTurHavuz
		{
			get { return _listSoruTurHavuz; }
			set { _isChanged |= (_listSoruTurHavuz != value); _listSoruTurHavuz = value; }
		} 
	  
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		#region Public Functions

		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		#region Equals And HashCode Overrides
		
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			Havuz castObj = (Havuz)obj; 
			return ( castObj != null ) &&
				( this._id == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{ 
			int hash = 57; 
			hash = 27 * hash * this._id.GetHashCode();
					
			return hash;		
			
		}
		
		#endregion
		
	}
}